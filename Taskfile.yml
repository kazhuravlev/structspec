# https://taskfile.dev

version: '3'

silent: true

vars:
  GO_MODULE: github.com/kazhuravlev/structspec
  GO_FILES:
    sh: find . -type f -name '*.go' -not -path "./.gocache/*" -not -path "./.go/*" -not -path "_generated.go" | tr "\n" " "

  TOOL_BIN_DIR: ./bin/tools

  GOBIN:
    sh: "echo `pwd`/{{ .TOOL_BIN_DIR }}"

  TOOL_LINT_SRC: github.com/golangci/golangci-lint/cmd/golangci-lint@v1.52.2
  TOOL_LINT: ./{{ .TOOL_BIN_DIR }}/golangci-lint

  TOOL_OPTIONS_GEN_SRC: github.com/kazhuravlev/options-gen/cmd/options-gen@v0.28.4
  TOOL_OPTIONS_GEN: ./{{ .TOOL_BIN_DIR }}/options-gen

tasks:
  default:
    cmds:
      - task --list-all

  check:
    desc: Run all project checks
    cmds:
      - echo "- Run all routines"
      - task: tidy
      - task: tools:install
      - task: generate
      - task: fmt
      - task: lint
      - task: install
      - task: tests

  tidy:
    cmds:
      - echo "- Tidy"
      - go mod tidy

  fmt:
    desc: Run code formatter
    cmds:
      - echo "- Format"
      - go fmt ./...

  tools:install:
    desc: Install required tools (into local project dir)
    run: once
    cmds:
      - echo "- Run install tools"
      - rm -rf {{ .TOOL_BIN_DIR }}
      - mkdir -p {{ .TOOL_BIN_DIR }}
      - export GOBIN="{{.GOBIN}}" && go install {{ .TOOL_LINT_SRC }}
      - export GOBIN="{{.GOBIN}}" && go install {{ .TOOL_OPTIONS_GEN_SRC }}

  generate:
    desc: Generate code
    env:
      SEARCH_BIN_PATH:
        sh: "echo `pwd`/{{ .TOOL_BIN_DIR }}:$PATH"
    cmds:
      - echo "- Generate code"
      - PATH=$SEARCH_BIN_PATH && go generate ./...

  lint:
    desc: Run linter
    deps:
      - "tools:install"
    cmds:
      - echo "- Lint"
      - "{{ .TOOL_LINT }} run --fix ./..."

  install:
    run: once
    cmds:
      - echo "- Install"
      - go install ./cmd/structspec

  tests:
    cmds:
      - echo "- Tests"
      - go test -race -count 1 ./...
