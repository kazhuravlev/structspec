// Code generated by structspec. DO NOT EDIT.
package {{ .PackageName }}

type Field string

// String implements Stringer interface
func (f Field) String() string {return string(f)}
// S - short version of String
func (f Field) S() string                   { return string(f) }

type ISpec interface {
    GetTags() []string
	// GetTagFields returns list of fields by tag key.
	GetTagFields(tagKey string) ([]Field, bool)
	GetTagField(tagKey, fieldName string) (Field, bool)
}

// GetAllSpecs returns list of all generated specs (high-level).
func GetAllSpecs() []ISpec {
	return []ISpec{
        {{ range .Structs -}}
            {{.Name}}F(),
        {{ end }}
    }
}

func GetSpecByStructName(structName string) (ISpec, bool) {
    switch structName {
        default:
            return nil, false
        {{ range .Structs -}}
            case "{{ .Name }}":
                return {{.Name}}F(), true
        {{ end }}
    }
}

{{ range .Structs }}
	{{ $struct := . }}

	{{/* Render struct for each tag */}}
	{{ range .Tags -}}
		type {{ $struct.Name }}{{.Name}}Spec struct {
			{{ range .Fields -}}
				{{.Name}} Field
			{{end}}
		}

		func {{ $struct.Name }}{{.Name}}SpecF() {{ $struct.Name }}{{.Name}}Spec {
			return {{ $struct.Name }}{{.Name}}Spec{
                {{ range .Fields -}}
                    {{.Name}}: "{{.Value}}",
                {{end}}
            }
		}

		func ({{ $struct.Name }}{{.Name}}Spec) Fields() []Field {
			return []Field{
                {{ range .Fields -}}
                    "{{.Value}}",
                {{end}}
            }
		}
	{{ end }}

	{{/* Render struct which contains all "tag structs" from prev step */}}
	type {{ .Name }}Spec struct {
		{{ range .Tags -}}
			{{ .Name }} {{ $struct.Name }}{{.Name}}Spec
		{{ end }}
	}

    // {{ .Name }}F is short version of {{ .Name }}{}.F()
    func {{ .Name }}F() {{ .Name }}Spec {
    	return {{ .Name }}Spec{
            {{ range .Tags -}}
                {{.Name}}: {{ $struct.Name }}{{.Name}}SpecF(),
            {{ end }}
    	}
    }

    // F returns fields spec for struct {{ .Name }}
    func ({{ .Name }}) F() {{ .Name }}Spec {
        return {{ .Name }}F()
    }

    func (s {{ .Name }}Spec) GetTags() []string {
        return []string{
            {{ range .Tags -}}
                "{{ .Name }}",
            {{ end }}
        }
    }

    func (s {{ .Name }}Spec) GetTagFields(tagKey string) ([]Field, bool) {
        switch tagKey {
        default:
            return nil, false
        {{ range .Tags -}}
            case "{{ .Name }}":
                return {{ $struct.Name }}{{.Name}}SpecF().Fields(), true
        {{ end }}
        }
    }

    func (s {{ .Name }}Spec) GetTagField(tagKey, fieldName string) (Field, bool) {
        switch tagKey {
            default:
                return "", false
            {{ range .Tags -}}
                case "{{ .Name }}":
                    switch fieldName {
                        default:
                            return "", false
                        {{ range .Fields -}}
                            case "{{ .Name }}":
                                return "{{ .Value }}", true
                        {{ end }}
                    }
            {{ end }}
        }
    }

{{ end }}


